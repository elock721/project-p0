// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaWorld.Storing;

namespace PizzaWorld.Storage.Migrations
{
    [DbContext(typeof(PizzaWorldContext))]
    [Migration("20201230011221_ContextAdd")]
    partial class ContextAdd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PizzaWorld.Domain.Abstracts.APizzaModel", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CrustEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SizeEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.HasIndex("CrustEntityId");

                    b.HasIndex("OrderEntityId");

                    b.HasIndex("SizeEntityId");

                    b.ToTable("APizzaModel");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.Order", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StoreEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.HasIndex("StoreEntityId");

                    b.HasIndex("UserEntityId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.Store", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            EntityId = new Guid("e34c7963-100b-4d66-9ac3-0d2fdd8dbabd"),
                            Name = "Home Slice"
                        },
                        new
                        {
                            EntityId = new Guid("db9d19d4-83f8-44e4-bda0-cfbf297dac5e"),
                            Name = "Pinthouse Pizza Co"
                        });
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.User", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SelectedStoreEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.HasIndex("SelectedStoreEntityId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PizzaWorld.Domian.Models.Crust", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EntityId");

                    b.ToTable("Crust");

                    b.HasData(
                        new
                        {
                            EntityId = new Guid("ece05d2a-383a-47c7-aa2f-763203b9a058"),
                            Name = "Brooklyn",
                            Price = 2m
                        },
                        new
                        {
                            EntityId = new Guid("654c3a49-2b5d-48b3-9e04-b899c2d48921"),
                            Name = "Deep Dish",
                            Price = 3m
                        },
                        new
                        {
                            EntityId = new Guid("7028b55a-02ec-4429-9298-ec7c100bdf3e"),
                            Name = "Hand Tossed",
                            Price = 1m
                        });
                });

            modelBuilder.Entity("PizzaWorld.Domian.Models.Size", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EntityId");

                    b.ToTable("Size");

                    b.HasData(
                        new
                        {
                            EntityId = new Guid("bebff9da-4cf0-47f2-bb03-fc55a85e0b19"),
                            Name = "Large",
                            Price = 15m
                        },
                        new
                        {
                            EntityId = new Guid("bfb8491d-9e8c-4a62-9b96-d83ff3436ff4"),
                            Name = "Medium",
                            Price = 12m
                        },
                        new
                        {
                            EntityId = new Guid("a5ce67b5-7990-4042-a3f4-9db5dfb3eb4b"),
                            Name = "Small",
                            Price = 9m
                        });
                });

            modelBuilder.Entity("PizzaWorld.Domian.Models.Toppings", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("APizzaModelEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EntityId");

                    b.HasIndex("APizzaModelEntityId");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            EntityId = new Guid("6b3480c3-75ac-4b4d-86b5-7d9e7d704adb"),
                            Name = "Cheese",
                            Price = 0m
                        },
                        new
                        {
                            EntityId = new Guid("15fe1345-fe4a-44d5-b10f-43931d4fca07"),
                            Name = "Pepperoni",
                            Price = 1m
                        },
                        new
                        {
                            EntityId = new Guid("64bb23cb-61d0-4e2d-8da7-80455d29b62c"),
                            Name = "Pineapple",
                            Price = 1m
                        },
                        new
                        {
                            EntityId = new Guid("296a5806-54ad-484b-95b2-14c3880f2c4a"),
                            Name = "Bell Pepper",
                            Price = 1m
                        },
                        new
                        {
                            EntityId = new Guid("e809c245-d894-41ef-95ad-2b97ed99b01f"),
                            Name = "Bacon",
                            Price = 2m
                        });
                });

            modelBuilder.Entity("PizzaWorld.Domain.Abstracts.APizzaModel", b =>
                {
                    b.HasOne("PizzaWorld.Domian.Models.Crust", "Crust")
                        .WithMany()
                        .HasForeignKey("CrustEntityId");

                    b.HasOne("PizzaWorld.Domain.Models.Order", null)
                        .WithMany("Pizzas")
                        .HasForeignKey("OrderEntityId");

                    b.HasOne("PizzaWorld.Domian.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeEntityId");

                    b.Navigation("Crust");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.Order", b =>
                {
                    b.HasOne("PizzaWorld.Domain.Models.Store", null)
                        .WithMany("Orders")
                        .HasForeignKey("StoreEntityId");

                    b.HasOne("PizzaWorld.Domain.Models.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.User", b =>
                {
                    b.HasOne("PizzaWorld.Domain.Models.Store", "SelectedStore")
                        .WithMany()
                        .HasForeignKey("SelectedStoreEntityId");

                    b.Navigation("SelectedStore");
                });

            modelBuilder.Entity("PizzaWorld.Domian.Models.Toppings", b =>
                {
                    b.HasOne("PizzaWorld.Domain.Abstracts.APizzaModel", null)
                        .WithMany("Toppings")
                        .HasForeignKey("APizzaModelEntityId");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Abstracts.APizzaModel", b =>
                {
                    b.Navigation("Toppings");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.Order", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.Store", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
