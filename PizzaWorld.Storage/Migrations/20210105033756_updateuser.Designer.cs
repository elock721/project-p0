// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaWorld.Storing;

namespace PizzaWorld.Storage.Migrations
{
    [DbContext(typeof(PizzaWorldContext))]
    [Migration("20210105033756_updateuser")]
    partial class updateuser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PizzaWorld.Domain.Abstracts.APizzaModel", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CrustEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SizeEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.HasIndex("CrustEntityId");

                    b.HasIndex("OrderEntityId");

                    b.HasIndex("SizeEntityId");

                    b.ToTable("APizzaModel");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.Order", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StoreEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.HasIndex("StoreEntityId");

                    b.HasIndex("UserEntityId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.Store", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            EntityId = new Guid("9183b298-a336-4fd6-a507-9599256e885d"),
                            Name = "Home Slice"
                        },
                        new
                        {
                            EntityId = new Guid("8cb4f5b2-fd1b-4be1-818c-dd4c6e7bb550"),
                            Name = "Pinthouse Pizza Co"
                        });
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.User", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SelectedStoreEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.HasIndex("SelectedStoreEntityId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PizzaWorld.Domian.Models.Crust", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EntityId");

                    b.ToTable("Crust");

                    b.HasData(
                        new
                        {
                            EntityId = new Guid("07e04c45-b87c-4999-b764-18435ef3e32e"),
                            Name = "Brooklyn",
                            Price = 2m
                        },
                        new
                        {
                            EntityId = new Guid("2471c503-01bf-4c26-8ea4-89351fba9d73"),
                            Name = "Deep Dish",
                            Price = 3m
                        },
                        new
                        {
                            EntityId = new Guid("d5ea8184-2bb7-4e21-84ac-0c6524ac6fe3"),
                            Name = "Hand Tossed",
                            Price = 1m
                        });
                });

            modelBuilder.Entity("PizzaWorld.Domian.Models.Size", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EntityId");

                    b.ToTable("Size");

                    b.HasData(
                        new
                        {
                            EntityId = new Guid("91418252-112e-4b0e-9a6b-1f224aac4bc0"),
                            Name = "Large",
                            Price = 15m
                        },
                        new
                        {
                            EntityId = new Guid("5da2279b-00b7-4203-af9b-2f3cdf3eaa95"),
                            Name = "Medium",
                            Price = 12m
                        },
                        new
                        {
                            EntityId = new Guid("871f9043-2c13-423b-ae33-8c5ebd39dc96"),
                            Name = "Small",
                            Price = 9m
                        });
                });

            modelBuilder.Entity("PizzaWorld.Domian.Models.Toppings", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("APizzaModelEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EntityId");

                    b.HasIndex("APizzaModelEntityId");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            EntityId = new Guid("a3d08d54-7afa-4228-b63a-547e9e352169"),
                            Name = "Cheese",
                            Price = 0m
                        },
                        new
                        {
                            EntityId = new Guid("51c0397a-3342-4f69-935c-cb2ebfc462bb"),
                            Name = "Pepperoni",
                            Price = 1m
                        },
                        new
                        {
                            EntityId = new Guid("2361c73f-9c5e-4439-9337-56b3f1e02c8a"),
                            Name = "Pineapple",
                            Price = 1m
                        },
                        new
                        {
                            EntityId = new Guid("70b63315-ab14-4592-a5a9-afe873e1a79a"),
                            Name = "Bell Pepper",
                            Price = 1m
                        },
                        new
                        {
                            EntityId = new Guid("ac9fc7ab-d18d-4c76-bc00-816efdfbad22"),
                            Name = "Bacon",
                            Price = 2m
                        });
                });

            modelBuilder.Entity("PizzaWorld.Domain.Abstracts.APizzaModel", b =>
                {
                    b.HasOne("PizzaWorld.Domian.Models.Crust", "Crust")
                        .WithMany()
                        .HasForeignKey("CrustEntityId");

                    b.HasOne("PizzaWorld.Domain.Models.Order", null)
                        .WithMany("Pizzas")
                        .HasForeignKey("OrderEntityId");

                    b.HasOne("PizzaWorld.Domian.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeEntityId");

                    b.Navigation("Crust");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.Order", b =>
                {
                    b.HasOne("PizzaWorld.Domain.Models.Store", null)
                        .WithMany("Orders")
                        .HasForeignKey("StoreEntityId");

                    b.HasOne("PizzaWorld.Domain.Models.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.User", b =>
                {
                    b.HasOne("PizzaWorld.Domain.Models.Store", "SelectedStore")
                        .WithMany()
                        .HasForeignKey("SelectedStoreEntityId");

                    b.Navigation("SelectedStore");
                });

            modelBuilder.Entity("PizzaWorld.Domian.Models.Toppings", b =>
                {
                    b.HasOne("PizzaWorld.Domain.Abstracts.APizzaModel", null)
                        .WithMany("Toppings")
                        .HasForeignKey("APizzaModelEntityId");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Abstracts.APizzaModel", b =>
                {
                    b.Navigation("Toppings");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.Order", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.Store", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PizzaWorld.Domain.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
